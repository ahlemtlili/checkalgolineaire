// algo 1 sum of distinct elements using arrays

ALGORITHM Sum_distinct
VAR
    set1 : ARRAY_OF INTEGER[]
    set2 : ARRAY_OF INTEGER[]
    i, j :INTEGER;
    sumdist:INTEGER:=0

BEGIN
Write("donner le tableau 1");
Read(set1);
Write("donner le tableau 2");
Read(set2);


FOR i FROM 0 TO set1.length STEP 1  DO
is_diff: BOOLEAN := false
FOR j FROM 0 TO set2.length STEP 1  DO

IF (set1[i] = set2[j]) THEN
is_diff := true
END_IF

END_FOR    

IF (is_diff = false) THEN
sumdist:= sumdist+ set1[i]
END_IF
END_FOR

FOR i FROM 0 TO set2.length STEP 1  DO
is_diff: BOOLEAN := false
FOR j FROM 0 TO set1.length STEP 1  DO

IF (set2[i] = set1[j]) THEN
is_diff := true
END_IF

END_FOR    

IF (is_diff = false) THEN
sumdist := sumdist+ set2[i]
END_IF
END_FOR

write("la somme de distincts elements est ", sumdist)
END

//algo 2  sum of distinct elements using hashtable


ALGORITHM withhtable
VAR
htab : HASH_TABLE<INTEGER,INTEGER>;

set1 : ARRAY_OF INTEGER[]
set2 : ARRAY_OF INTEGER[]
i, j : INTEGER;
sumdist:INTEGER:=0

BEGIN

Write("donner le tableau 1");
Read(set1);
Write("donner le tableau 2");
Read(set2);

FOR i FROM 0 TO set1.length-1 STEP 1  DO
htab.insert(set1[i],1); 
END_FOR
FOR j FROM 0 TO set2.length-1 STEP 1  DO
IF (htab.lookup(set2[j])) THEN
htab.insert(set2[j], 2)
ELSE
htab.insert(set2[j], 1)
END_IF
END_FOR

FOR i FROM 0 TO set1.length-1 STEP 1  DO
IF (htab.get(set1[i])=1) THEN
sumdist := sumdist+ set1[i]
END_IF
END_FOR

FOR j FROM 0 TO set2.length-1 STEP 1  DO
IF (htab.get(set2[j])=1) THEN
sumdist:= sumdist + set2[j]
END_IF
END_FOR
write("la somme de distinct elements est : ", sumdist)
END

//// algo 3 somme des éléments qui se chevauchent à l'aide de tableaux(overlapping)

ALGORITHM Sum_overlapping_elements_array
VAR
set1 : ARRAY_OF INTEGER[]
set2 : ARRAY_OF INTEGER[]
i, j :INTEGER;
sumover:INTEGER:=0

BEGIN
Write("donner le tableau 1");
Read(set1);
Write("donner le tableau 2");
Read(set2);


FOR i FROM 0 TO set1.length STEP 1  DO
FOR j FROM 0 TO set2.length STEP 1  DO

IF (set1[i] = set2[j]) THEN
sumover:= sumover+ set1[i]
END_IF
END_FOR    
END_FOR


FOR i FROM 0 TO set2.length STEP 1  DO
FOR j FROM 0 TO set1.length STEP 1  DO

IF (set2[i] = set1[j]) THEN
sumover := sumover+set2[i]
END_IF
END_FOR    
END_FOR

write("la somme des élements qui  se chevauchent", sumover)
END

//algo 4 somme des éléments qui se chevauchent à l'aide de  hashtable(overlapping)

ALGORITHM Sum_overlapping_elements_array
VAR
htab : HASH_TABLE<INTEGER,INTEGER>;
set1 : ARRAY_OF INTEGER[]
set2 : ARRAY_OF INTEGER[]
i, j : INTEGER;
sumover: INTEGER:= 0
BEGIN

Write("donner le tableau 1");
Read(set1);
Write("donner le tableau 2");
Read(set2);

FOR i FROM 0 TO set1.length-1 STEP 1  DO
htab.insert(set1[i],1); 
END_FOR 

FOR j FROM 0 TO set2.length-1 STEP 1  DO
IF (htab.lookup(set2[j])) THEN
htab.insert(set2[j], 2)
ELSE
htab.insert(set2[j], 1)
END_IF
END_FOR


FOR i FROM 0 TO set2.length-1 STEP 1  DO
IF (htab.get(set2[i])=2) THEN
sumover := sumover+ set2[i]*2
END_IF
END_FOR

write("la somme des élements qui  se chevauchent ", sumover)
END